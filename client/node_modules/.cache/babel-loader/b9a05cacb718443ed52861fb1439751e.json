{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"/Users/jervisbay/project-tres/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/jervisbay/project-tres/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar Types = require('../constants/types');\n\nvar Packet = require('../packets/packet');\n\nvar binaryReader = new Array(256);\n\nvar BinaryRow = /*#__PURE__*/function () {\n  function BinaryRow(columns) {\n    _classCallCheck(this, BinaryRow);\n\n    this.columns = columns || [];\n  }\n\n  _createClass(BinaryRow, [{\n    key: \"toPacket\",\n    value: function toPacket() {\n      throw new Error('Not implemented');\n    } // TODO: complete list of types...\n\n  }], [{\n    key: \"fromPacket\",\n    value: function fromPacket(fields, packet) {\n      var columns = new Array(fields.length);\n      packet.readInt8(); // TODO check it's 0\n\n      var nullBitmapLength = Math.floor((fields.length + 7 + 2) / 8); // TODO: read and interpret null bitmap\n\n      packet.skip(nullBitmapLength);\n\n      for (var i = 0; i < columns.length; ++i) {\n        columns[i] = binaryReader[fields[i].columnType].apply(packet);\n      }\n\n      return new BinaryRow(columns);\n    }\n  }]);\n\n  return BinaryRow;\n}(); // TODO: replace with constants.MYSQL_TYPE_*\n\n\nbinaryReader[Types.DECIMAL] = Packet.prototype.readLengthCodedString;\nbinaryReader[1] = Packet.prototype.readInt8; // tiny\n\nbinaryReader[2] = Packet.prototype.readInt16; // short\n\nbinaryReader[3] = Packet.prototype.readInt32; // long\n\nbinaryReader[4] = Packet.prototype.readFloat; // float\n\nbinaryReader[5] = Packet.prototype.readDouble; // double\n\nbinaryReader[6] = Packet.prototype.assertInvalid; // null, should be skipped vie null bitmap\n\nbinaryReader[7] = Packet.prototype.readTimestamp; // timestamp, http://dev.mysql.com/doc/internals/en/prepared-statements.html#packet-ProtocolBinary::MYSQL_TYPE_TIMESTAMP\n\nbinaryReader[8] = Packet.prototype.readInt64; // long long\n\nbinaryReader[9] = Packet.prototype.readInt32; // int24\n\nbinaryReader[10] = Packet.prototype.readTimestamp; // date\n\nbinaryReader[11] = Packet.prototype.readTime; // time, http://dev.mysql.com/doc/internals/en/prepared-statements.html#packet-ProtocolBinary::MYSQL_TYPE_TIME\n\nbinaryReader[12] = Packet.prototype.readDateTime; // datetime, http://dev.mysql.com/doc/internals/en/prepared-statements.html#packet-ProtocolBinary::MYSQL_TYPE_DATETIME\n\nbinaryReader[13] = Packet.prototype.readInt16; // year\n\nbinaryReader[Types.VAR_STRING] = Packet.prototype.readLengthCodedString; // var string\n\nmodule.exports = BinaryRow;","map":null,"metadata":{},"sourceType":"script"}
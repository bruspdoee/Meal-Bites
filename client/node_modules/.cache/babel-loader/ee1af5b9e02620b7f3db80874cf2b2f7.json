{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"/Users/jervisbay/project-tres/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/jervisbay/project-tres/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar Packet = require('../packets/packet');\n\nvar TextRow = /*#__PURE__*/function () {\n  function TextRow(columns) {\n    _classCallCheck(this, TextRow);\n\n    this.columns = columns || [];\n  }\n\n  _createClass(TextRow, null, [{\n    key: \"fromPacket\",\n    value: function fromPacket(packet) {\n      // packet.reset(); // set offset to starting point?\n      var columns = [];\n\n      while (packet.haveMoreData()) {\n        columns.push(packet.readLengthCodedString());\n      }\n\n      return new TextRow(columns);\n    }\n  }, {\n    key: \"toPacket\",\n    value: function toPacket(columns, encoding) {\n      var sequenceId = 0; // TODO remove, this is calculated now in connecton\n\n      var length = 0;\n      columns.forEach(function (val) {\n        if (val === null || typeof val === 'undefined') {\n          ++length;\n          return;\n        }\n\n        length += Packet.lengthCodedStringLength(val.toString(10), encoding);\n      });\n      var buffer = Buffer.allocUnsafe(length + 4);\n      var packet = new Packet(sequenceId, buffer, 0, length + 4);\n      packet.offset = 4;\n      columns.forEach(function (val) {\n        if (val === null) {\n          packet.writeNull();\n          return;\n        }\n\n        if (typeof val === 'undefined') {\n          packet.writeInt8(0);\n          return;\n        }\n\n        packet.writeLengthCodedString(val.toString(10), encoding);\n      });\n      return packet;\n    }\n  }]);\n\n  return TextRow;\n}();\n\nmodule.exports = TextRow;","map":null,"metadata":{},"sourceType":"script"}
{"ast":null,"code":"'use strict';\n\nvar _objectSpread = require(\"/Users/jervisbay/project-tres/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/objectSpread\");\n\nvar _defineProperty = require(\"/Users/jervisbay/project-tres/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/defineProperty\");\n\nvar _OperatorMap;\n\nvar _ = require('lodash');\n\nvar Op = require('../../../operators');\n\nvar Utils = require('../../../utils');\n\nvar OperatorHelpers = {\n  OperatorMap: (_OperatorMap = {}, _defineProperty(_OperatorMap, Op.eq, '='), _defineProperty(_OperatorMap, Op.ne, '!='), _defineProperty(_OperatorMap, Op.gte, '>='), _defineProperty(_OperatorMap, Op.gt, '>'), _defineProperty(_OperatorMap, Op.lte, '<='), _defineProperty(_OperatorMap, Op.lt, '<'), _defineProperty(_OperatorMap, Op.not, 'IS NOT'), _defineProperty(_OperatorMap, Op.is, 'IS'), _defineProperty(_OperatorMap, Op.in, 'IN'), _defineProperty(_OperatorMap, Op.notIn, 'NOT IN'), _defineProperty(_OperatorMap, Op.like, 'LIKE'), _defineProperty(_OperatorMap, Op.notLike, 'NOT LIKE'), _defineProperty(_OperatorMap, Op.iLike, 'ILIKE'), _defineProperty(_OperatorMap, Op.notILike, 'NOT ILIKE'), _defineProperty(_OperatorMap, Op.startsWith, 'LIKE'), _defineProperty(_OperatorMap, Op.endsWith, 'LIKE'), _defineProperty(_OperatorMap, Op.substring, 'LIKE'), _defineProperty(_OperatorMap, Op.regexp, '~'), _defineProperty(_OperatorMap, Op.notRegexp, '!~'), _defineProperty(_OperatorMap, Op.iRegexp, '~*'), _defineProperty(_OperatorMap, Op.notIRegexp, '!~*'), _defineProperty(_OperatorMap, Op.between, 'BETWEEN'), _defineProperty(_OperatorMap, Op.notBetween, 'NOT BETWEEN'), _defineProperty(_OperatorMap, Op.overlap, '&&'), _defineProperty(_OperatorMap, Op.contains, '@>'), _defineProperty(_OperatorMap, Op.contained, '<@'), _defineProperty(_OperatorMap, Op.adjacent, '-|-'), _defineProperty(_OperatorMap, Op.strictLeft, '<<'), _defineProperty(_OperatorMap, Op.strictRight, '>>'), _defineProperty(_OperatorMap, Op.noExtendRight, '&<'), _defineProperty(_OperatorMap, Op.noExtendLeft, '&>'), _defineProperty(_OperatorMap, Op.any, 'ANY'), _defineProperty(_OperatorMap, Op.all, 'ALL'), _defineProperty(_OperatorMap, Op.and, ' AND '), _defineProperty(_OperatorMap, Op.or, ' OR '), _defineProperty(_OperatorMap, Op.col, 'COL'), _defineProperty(_OperatorMap, Op.placeholder, '$$PLACEHOLDER$$'), _OperatorMap),\n  OperatorsAliasMap: {},\n  setOperatorsAliases: function setOperatorsAliases(aliases) {\n    if (!aliases || _.isEmpty(aliases)) {\n      this.OperatorsAliasMap = false;\n    } else {\n      this.OperatorsAliasMap = _objectSpread({}, aliases);\n    }\n  },\n  _replaceAliases: function _replaceAliases(orig) {\n    var _this = this;\n\n    var obj = {};\n\n    if (!this.OperatorsAliasMap) {\n      return orig;\n    }\n\n    Utils.getOperators(orig).forEach(function (op) {\n      var item = orig[op];\n\n      if (_.isPlainObject(item)) {\n        obj[op] = _this._replaceAliases(item);\n      } else {\n        obj[op] = item;\n      }\n    });\n\n    _.forOwn(orig, function (item, prop) {\n      prop = _this.OperatorsAliasMap[prop] || prop;\n\n      if (_.isPlainObject(item)) {\n        item = _this._replaceAliases(item);\n      }\n\n      obj[prop] = item;\n    });\n\n    return obj;\n  }\n};\nmodule.exports = OperatorHelpers;","map":null,"metadata":{},"sourceType":"script"}
{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"/Users/jervisbay/project-tres/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _possibleConstructorReturn = require(\"/Users/jervisbay/project-tres/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/Users/jervisbay/project-tres/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"/Users/jervisbay/project-tres/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar BaseError = require('./base-error');\n/**\n * Thrown when attempting to update a stale model instance\n */\n\n\nvar OptimisticLockError = /*#__PURE__*/function (_BaseError) {\n  _inherits(OptimisticLockError, _BaseError);\n\n  function OptimisticLockError(options) {\n    var _this;\n\n    _classCallCheck(this, OptimisticLockError);\n\n    options = options || {};\n    options.message = options.message || \"Attempting to update a stale model instance: \".concat(options.modelName);\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(OptimisticLockError).call(this, options.message));\n    _this.name = 'SequelizeOptimisticLockError';\n    /**\n     * The name of the model on which the update was attempted\n     *\n     * @type {string}\n     */\n\n    _this.modelName = options.modelName;\n    /**\n     * The values of the attempted update\n     *\n     * @type {object}\n     */\n\n    _this.values = options.values;\n    /**\n     *\n     * @type {object}\n     */\n\n    _this.where = options.where;\n    return _this;\n  }\n\n  return OptimisticLockError;\n}(BaseError);\n\nmodule.exports = OptimisticLockError;","map":null,"metadata":{},"sourceType":"script"}
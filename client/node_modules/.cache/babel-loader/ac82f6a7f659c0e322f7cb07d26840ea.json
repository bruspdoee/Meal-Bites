{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"/Users/jervisbay/project-tres/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/jervisbay/project-tres/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"/Users/jervisbay/project-tres/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/Users/jervisbay/project-tres/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"/Users/jervisbay/project-tres/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar BaseError = require('./base-error');\n/**\n * A wrapper for multiple Errors\n *\n * @param {Error[]} [errors] Array of errors\n *\n * @property errors {Error[]}\n */\n\n\nvar AggregateError = /*#__PURE__*/function (_BaseError) {\n  _inherits(AggregateError, _BaseError);\n\n  function AggregateError(errors) {\n    var _this;\n\n    _classCallCheck(this, AggregateError);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AggregateError).call(this));\n    _this.errors = errors;\n    _this.name = 'AggregateError';\n    return _this;\n  }\n\n  _createClass(AggregateError, [{\n    key: \"toString\",\n    value: function toString() {\n      var _this2 = this;\n\n      var message = \"AggregateError of:\\n\".concat(this.errors.map(function (error) {\n        return error === _this2 ? '[Circular AggregateError]' : error instanceof AggregateError ? String(error).replace(/\\n$/, '').replace(/^/mg, '  ') : String(error).replace(/^/mg, '    ').substring(2);\n      }).join('\\n'), \"\\n\");\n      return message;\n    }\n  }]);\n\n  return AggregateError;\n}(BaseError);\n\nmodule.exports = AggregateError;","map":null,"metadata":{},"sourceType":"script"}
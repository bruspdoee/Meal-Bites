{"ast":null,"code":"'use strict';\n/**\n * Sequelize module for debug and deprecation messages.\n * It require a `context` for which messages will be printed.\n *\n * @module logging\n * @private\n */\n\nvar _objectSpread = require(\"/Users/jervisbay/project-tres/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/objectSpread\");\n\nvar _classCallCheck = require(\"/Users/jervisbay/project-tres/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/jervisbay/project-tres/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar debug = require('debug');\n\nvar util = require('util');\n\nvar Logger = /*#__PURE__*/function () {\n  function Logger(config) {\n    _classCallCheck(this, Logger);\n\n    this.config = _objectSpread({\n      context: 'sequelize',\n      debug: true\n    }, config);\n  }\n\n  _createClass(Logger, [{\n    key: \"warn\",\n    value: function warn(message) {\n      // eslint-disable-next-line no-console\n      console.warn(\"(\".concat(this.config.context, \") Warning: \").concat(message));\n    }\n  }, {\n    key: \"inspect\",\n    value: function inspect(value) {\n      return util.inspect(value, false, 3);\n    }\n  }, {\n    key: \"debugContext\",\n    value: function debugContext(name) {\n      return debug(\"\".concat(this.config.context, \":\").concat(name));\n    }\n  }]);\n\n  return Logger;\n}();\n\nexports.logger = new Logger();\nexports.Logger = Logger;","map":null,"metadata":{},"sourceType":"script"}
{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"/Users/jervisbay/project-tres/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/jervisbay/project-tres/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar Packet = require('../packets/packet');\n\nvar ClientConstants = require('../constants/client.js'); // https://dev.mysql.com/doc/internals/en/connection-phase-packets.html#packet-Protocol::Handshake\n\n\nvar Handshake = /*#__PURE__*/function () {\n  function Handshake(args) {\n    _classCallCheck(this, Handshake);\n\n    this.protocolVersion = args.protocolVersion;\n    this.serverVersion = args.serverVersion;\n    this.capabilityFlags = args.capabilityFlags;\n    this.connectionId = args.connectionId;\n    this.authPluginData1 = args.authPluginData1;\n    this.authPluginData2 = args.authPluginData2;\n    this.characterSet = args.characterSet;\n    this.statusFlags = args.statusFlags;\n    this.autPluginName = args.autPluginName;\n  }\n\n  _createClass(Handshake, [{\n    key: \"setScrambleData\",\n    value: function setScrambleData(cb) {\n      var _this = this;\n\n      require('crypto').randomBytes(20, function (err, data) {\n        if (err) {\n          cb(err);\n          return;\n        }\n\n        _this.authPluginData1 = data.slice(0, 8);\n        _this.authPluginData2 = data.slice(8, 20);\n        cb();\n      });\n    }\n  }, {\n    key: \"toPacket\",\n    value: function toPacket(sequenceId) {\n      var length = 68 + Buffer.byteLength(this.serverVersion, 'utf8');\n      var buffer = Buffer.alloc(length + 4, 0); // zero fill, 10 bytes filler later needs to contain zeros\n\n      var packet = new Packet(sequenceId, buffer, 0, length + 4);\n      packet.offset = 4;\n      packet.writeInt8(this.protocolVersion);\n      packet.writeString(this.serverVersion, 'cesu8');\n      packet.writeInt8(0);\n      packet.writeInt32(this.connectionId);\n      packet.writeBuffer(this.authPluginData1);\n      packet.writeInt8(0);\n      var capabilityFlagsBuffer = Buffer.allocUnsafe(4);\n      capabilityFlagsBuffer.writeUInt32LE(this.capabilityFlags, 0);\n      packet.writeBuffer(capabilityFlagsBuffer.slice(0, 2));\n      packet.writeInt8(this.characterSet);\n      packet.writeInt16(this.statusFlags);\n      packet.writeBuffer(capabilityFlagsBuffer.slice(2, 4));\n      packet.writeInt8(21); // authPluginDataLength\n\n      packet.skip(10);\n      packet.writeBuffer(this.authPluginData2);\n      packet.writeInt8(0);\n      packet.writeString('mysql_native_password', 'latin1');\n      packet.writeInt8(0);\n      return packet;\n    }\n  }], [{\n    key: \"fromPacket\",\n    value: function fromPacket(packet) {\n      var args = {};\n      args.protocolVersion = packet.readInt8();\n      args.serverVersion = packet.readNullTerminatedString('cesu8');\n      args.connectionId = packet.readInt32();\n      args.authPluginData1 = packet.readBuffer(8);\n      packet.skip(1);\n      var capabilityFlagsBuffer = Buffer.allocUnsafe(4);\n      capabilityFlagsBuffer[0] = packet.readInt8();\n      capabilityFlagsBuffer[1] = packet.readInt8();\n\n      if (packet.haveMoreData()) {\n        args.characterSet = packet.readInt8();\n        args.statusFlags = packet.readInt16(); // upper 2 bytes\n\n        capabilityFlagsBuffer[2] = packet.readInt8();\n        capabilityFlagsBuffer[3] = packet.readInt8();\n        args.capabilityFlags = capabilityFlagsBuffer.readUInt32LE(0);\n\n        if (args.capabilityFlags & ClientConstants.PLUGIN_AUTH) {\n          args.authPluginDataLength = packet.readInt8();\n        } else {\n          args.authPluginDataLength = 0;\n          packet.skip(1);\n        }\n\n        packet.skip(10);\n      } else {\n        args.capabilityFlags = capabilityFlagsBuffer.readUInt16LE(0);\n      }\n\n      var isSecureConnection = args.capabilityFlags & ClientConstants.SECURE_CONNECTION;\n\n      if (isSecureConnection) {\n        var authPluginDataLength = args.authPluginDataLength;\n\n        if (authPluginDataLength === 0) {\n          // for Secure Password Authentication\n          args.authPluginDataLength = 20;\n          args.authPluginData2 = packet.readBuffer(12);\n          packet.skip(1);\n        } else {\n          // length > 0\n          // for Custom Auth Plugin (PLUGIN_AUTH)\n          var len = Math.max(13, authPluginDataLength - 8);\n          args.authPluginData2 = packet.readBuffer(len);\n        }\n      }\n\n      if (args.capabilityFlags & ClientConstants.PLUGIN_AUTH) {\n        args.autPluginName = packet.readNullTerminatedString('ascii');\n      }\n\n      return new Handshake(args);\n    }\n  }]);\n\n  return Handshake;\n}();\n\nmodule.exports = Handshake;","map":null,"metadata":{},"sourceType":"script"}
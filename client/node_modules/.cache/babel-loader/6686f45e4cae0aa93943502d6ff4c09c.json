{"ast":null,"code":"var Readable = require('readable-stream/readable');\n\nvar util = require('util');\n\nfunction isReadable(stream) {\n  if (typeof stream.pipe !== 'function') {\n    return false;\n  }\n\n  if (!stream.readable) {\n    return false;\n  }\n\n  if (typeof stream._read !== 'function') {\n    return false;\n  }\n\n  if (!stream._readableState) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction addStream(streams, stream) {\n  if (!isReadable(stream)) {\n    throw new Error('All input streams must be readable');\n  }\n\n  var self = this;\n  stream._buffer = [];\n  stream.on('readable', function () {\n    var chunk = stream.read();\n\n    while (chunk) {\n      if (this === streams[0]) {\n        self.push(chunk);\n      } else {\n        this._buffer.push(chunk);\n      }\n\n      chunk = stream.read();\n    }\n  });\n  stream.on('end', function () {\n    for (var stream = streams[0]; stream && stream._readableState.ended; stream = streams[0]) {\n      while (stream._buffer.length) {\n        self.push(stream._buffer.shift());\n      }\n\n      streams.shift();\n    }\n\n    if (!streams.length) {\n      self.push(null);\n    }\n  });\n  stream.on('error', this.emit.bind(this, 'error'));\n  streams.push(stream);\n}\n\nfunction OrderedStreams(streams, options) {\n  if (!(this instanceof OrderedStreams)) {\n    return new OrderedStreams(streams, options);\n  }\n\n  streams = streams || [];\n  options = options || {};\n  options.objectMode = true;\n  Readable.call(this, options);\n\n  if (!Array.isArray(streams)) {\n    streams = [streams];\n  }\n\n  if (!streams.length) {\n    return this.push(null); // no streams, close\n  }\n\n  var addStreamBinded = addStream.bind(this, []);\n  streams.forEach(function (item) {\n    if (Array.isArray(item)) {\n      item.forEach(addStreamBinded);\n    } else {\n      addStreamBinded(item);\n    }\n  });\n}\n\nutil.inherits(OrderedStreams, Readable);\n\nOrderedStreams.prototype._read = function () {};\n\nmodule.exports = OrderedStreams;","map":null,"metadata":{},"sourceType":"script"}
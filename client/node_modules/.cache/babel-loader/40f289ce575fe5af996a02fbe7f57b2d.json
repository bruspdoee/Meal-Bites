{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"/Users/jervisbay/project-tres/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/jervisbay/project-tres/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"/Users/jervisbay/project-tres/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/Users/jervisbay/project-tres/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"/Users/jervisbay/project-tres/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar MySQLQueryGenerator = require('../mysql/query-generator');\n\nvar MariaDBQueryGenerator = /*#__PURE__*/function (_MySQLQueryGenerator) {\n  _inherits(MariaDBQueryGenerator, _MySQLQueryGenerator);\n\n  function MariaDBQueryGenerator() {\n    _classCallCheck(this, MariaDBQueryGenerator);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(MariaDBQueryGenerator).apply(this, arguments));\n  }\n\n  _createClass(MariaDBQueryGenerator, [{\n    key: \"createSchema\",\n    value: function createSchema(schema, options) {\n      options = Object.assign({\n        charset: null,\n        collate: null\n      }, options || {});\n      var charset = options.charset ? \" DEFAULT CHARACTER SET \".concat(this.escape(options.charset)) : '';\n      var collate = options.collate ? \" DEFAULT COLLATE \".concat(this.escape(options.collate)) : '';\n      return \"CREATE SCHEMA IF NOT EXISTS \".concat(this.quoteIdentifier(schema)).concat(charset).concat(collate, \";\");\n    }\n  }, {\n    key: \"dropSchema\",\n    value: function dropSchema(schema) {\n      return \"DROP SCHEMA IF EXISTS \".concat(this.quoteIdentifier(schema), \";\");\n    }\n  }, {\n    key: \"showSchemasQuery\",\n    value: function showSchemasQuery(options) {\n      var _this = this;\n\n      var skip = options.skip && Array.isArray(options.skip) && options.skip.length > 0 ? options.skip : null;\n      return \"SELECT SCHEMA_NAME as schema_name FROM INFORMATION_SCHEMA.SCHEMATA WHERE SCHEMA_NAME NOT IN ('MYSQL', 'INFORMATION_SCHEMA', 'PERFORMANCE_SCHEMA'\".concat(skip ? skip.reduce(function (sql, schemaName) {\n        return sql += \",\".concat(_this.escape(schemaName));\n      }, '') : '', \");\");\n    }\n  }, {\n    key: \"showTablesQuery\",\n    value: function showTablesQuery(database) {\n      var query = 'SELECT TABLE_NAME, TABLE_SCHEMA FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = \\'BASE TABLE\\'';\n\n      if (database) {\n        query += \" AND TABLE_SCHEMA = \".concat(this.escape(database));\n      } else {\n        query += ' AND TABLE_SCHEMA NOT IN (\\'MYSQL\\', \\'INFORMATION_SCHEMA\\', \\'PERFORMANCE_SCHEMA\\')';\n      }\n\n      return \"\".concat(query, \";\");\n    }\n  }]);\n\n  return MariaDBQueryGenerator;\n}(MySQLQueryGenerator);\n\nmodule.exports = MariaDBQueryGenerator;","map":null,"metadata":{},"sourceType":"script"}
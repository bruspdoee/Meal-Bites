{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"/Users/jervisbay/project-tres/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _possibleConstructorReturn = require(\"/Users/jervisbay/project-tres/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/Users/jervisbay/project-tres/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"/Users/jervisbay/project-tres/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _assertThisInitialized = require(\"/Users/jervisbay/project-tres/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/assertThisInitialized\");\n\nvar BaseError = require('./base-error');\n/**\n * Thrown when bulk operation fails, it represent per record level error.\n * Used with Promise.AggregateError\n *\n * @param {Error}  error   Error for a given record/instance\n * @param {Object} record  DAO instance that error belongs to\n */\n\n\nvar BulkRecordError = /*#__PURE__*/function (_BaseError) {\n  _inherits(BulkRecordError, _BaseError);\n\n  function BulkRecordError(error, record) {\n    var _this;\n\n    _classCallCheck(this, BulkRecordError);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(BulkRecordError).call(this, error.message));\n    _this.name = 'SequelizeBulkRecordError';\n    _this.errors = error;\n    _this.record = record;\n    Error.captureStackTrace(_assertThisInitialized(_assertThisInitialized(_this)), _this.constructor);\n    return _this;\n  }\n\n  return BulkRecordError;\n}(BaseError);\n\nmodule.exports = BulkRecordError;","map":null,"metadata":{},"sourceType":"script"}
{"ast":null,"code":"'use strict'; // http://dev.mysql.com/doc/internals/en/com-binlog-dump.html#packet-COM_BINLOG_DUMP\n\nvar _classCallCheck = require(\"/Users/jervisbay/project-tres/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/jervisbay/project-tres/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar Packet = require('../packets/packet');\n\nvar CommandCodes = require('../constants/commands'); // TODO: add flag to constants\n// 0x01 - BINLOG_DUMP_NON_BLOCK\n// send EOF instead of blocking\n\n\nvar BinlogDump = /*#__PURE__*/function () {\n  function BinlogDump(opts) {\n    _classCallCheck(this, BinlogDump);\n\n    this.binlogPos = opts.binlogPos || 0;\n    this.serverId = opts.serverId || 0;\n    this.flags = opts.flags || 0;\n    this.filename = opts.filename || '';\n  }\n\n  _createClass(BinlogDump, [{\n    key: \"toPacket\",\n    value: function toPacket() {\n      var length = 15 + Buffer.byteLength(this.filename, 'utf8'); // TODO: should be ascii?\n\n      var buffer = Buffer.allocUnsafe(length);\n      var packet = new Packet(0, buffer, 0, length);\n      packet.offset = 4;\n      packet.writeInt8(CommandCodes.BINLOG_DUMP);\n      packet.writeInt32(this.binlogPos);\n      packet.writeInt16(this.flags);\n      packet.writeInt32(this.serverId);\n      packet.writeString(this.filename);\n      return packet;\n    }\n  }]);\n\n  return BinlogDump;\n}();\n\nmodule.exports = BinlogDump;","map":null,"metadata":{},"sourceType":"script"}
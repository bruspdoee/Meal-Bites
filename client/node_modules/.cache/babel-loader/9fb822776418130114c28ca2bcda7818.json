{"ast":null,"code":"import _classCallCheck from \"/Users/jervisbay/project-tres/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jervisbay/project-tres/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jervisbay/project-tres/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jervisbay/project-tres/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jervisbay/project-tres/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/jervisbay/project-tres/client/src/components/Map/index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nvar mapStyles = {\n  map: {\n    position: \"absolute\",\n    width: \"70%\",\n    height: \"70%\"\n  }\n};\nexport var Map = /*#__PURE__*/function (_React$Component) {\n  _inherits(Map, _React$Component);\n\n  function Map(props) {\n    var _this;\n\n    _classCallCheck(this, Map);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Map).call(this, props));\n    var _this$props$initialCe = _this.props.initialCenter,\n        lat = _this$props$initialCe.lat,\n        lng = _this$props$initialCe.lng;\n    _this.state = {\n      currentLocation: {\n        lat: lat,\n        lng: lng\n      }\n    };\n    return _this;\n  } // componentDidUpdate(prevProps, prevState) {\n  //   if (prevProps.google !== this.props.google) {\n  //     this.loadMap();\n  //   }\n  //   if (prevState.currentLocation !== this.state.currentLocation) {\n  //     this.recenterMap();\n  //   }\n  // }\n  // recenterMap() {\n  //   const map = this.map;\n  //   const current = this.state.currentLocation;\n  //   const google = this.props.google;\n  //   const maps = google.maps;\n  //   if (map) {\n  //     let center = new maps.LatLng(current.lat, current.lng);\n  //     map.panTo(center);\n  //   }\n  // }\n\n\n  _createClass(Map, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setState({\n        currentLocation: {\n          lat: 40.7033,\n          lng: -73.9916\n        }\n      });\n      this.loadMap();\n    }\n  }, {\n    key: \"loadMap\",\n    value: function loadMap() {\n      if (this.props && this.props.google) {\n        // checks if google is available\n        var google = this.props.google;\n        var maps = google.maps;\n        var mapRef = this.refs.map; // reference to the actual DOM element\n\n        var node = ReactDOM.findDOMNode(mapRef);\n        var zoom = this.props.zoom;\n        var _this$state$currentLo = this.state.currentLocation,\n            lat = _this$state$currentLo.lat,\n            lng = _this$state$currentLo.lng;\n        var center = new maps.LatLng(lat, lng);\n        var mapConfig = Object.assign({}, {\n          center: center,\n          zoom: zoom\n        }); // maps.Map() is constructor that instantiates the map\n\n        this.map = new maps.Map(node, mapConfig);\n      }\n    }\n  }, {\n    key: \"renderChildren\",\n    value: function renderChildren() {\n      var _this2 = this;\n\n      var children = this.props.children;\n      if (!children) return;\n      return React.Children.map(children, function (c) {\n        if (!c) return;\n        return React.cloneElement(c, {\n          map: _this2.map,\n          google: _this2.props.google,\n          mapCenter: _this2.state.currentLocation\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var style = Object.assign({}, mapStyles.map);\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: style,\n        ref: \"map\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 9\n        }\n      }, \"Loading map...\"), this.renderChildren());\n    }\n  }]);\n\n  return Map;\n}(React.Component);\nexport default Map;\nMap.defaultProps = {\n  zoom: 14,\n  initialCenter: {\n    lat: 40.7033,\n    lng: -73.9916\n  },\n  centerAroundCurrentLocation: false,\n  visible: true\n};","map":{"version":3,"sources":["/Users/jervisbay/project-tres/client/src/components/Map/index.js"],"names":["React","ReactDOM","mapStyles","map","position","width","height","Map","props","initialCenter","lat","lng","state","currentLocation","setState","loadMap","google","maps","mapRef","refs","node","findDOMNode","zoom","center","LatLng","mapConfig","Object","assign","children","Children","c","cloneElement","mapCenter","style","renderChildren","Component","defaultProps","centerAroundCurrentLocation","visible"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nconst mapStyles = {\n  map: {\n    position: \"absolute\",\n    width: \"70%\",\n    height: \"70%\",\n  },\n};\n\nexport class Map extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const { lat, lng } = this.props.initialCenter;\n    this.state = {\n      currentLocation: {\n        lat: lat,\n        lng: lng,\n      },\n    };\n  }\n\n  // componentDidUpdate(prevProps, prevState) {\n  //   if (prevProps.google !== this.props.google) {\n  //     this.loadMap();\n  //   }\n  //   if (prevState.currentLocation !== this.state.currentLocation) {\n  //     this.recenterMap();\n  //   }\n  // }\n\n  // recenterMap() {\n  //   const map = this.map;\n  //   const current = this.state.currentLocation;\n\n  //   const google = this.props.google;\n  //   const maps = google.maps;\n\n  //   if (map) {\n  //     let center = new maps.LatLng(current.lat, current.lng);\n  //     map.panTo(center);\n  //   }\n  // }\n\n  componentDidMount() {\n    this.setState({\n      currentLocation: {\n        lat: 40.7033,\n    lng: -73.9916,\n      },\n    });\n    this.loadMap();\n  }\n\n  loadMap() {\n    if (this.props && this.props.google) {\n      // checks if google is available\n      const { google } = this.props;\n      const maps = google.maps;\n\n      const mapRef = this.refs.map;\n\n      // reference to the actual DOM element\n      const node = ReactDOM.findDOMNode(mapRef);\n\n      let { zoom } = this.props;\n      const { lat, lng } = this.state.currentLocation;\n      const center = new maps.LatLng(lat, lng);\n      const mapConfig = Object.assign(\n        {},\n        {\n          center: center,\n          zoom: zoom,\n        }\n      );\n\n      // maps.Map() is constructor that instantiates the map\n      this.map = new maps.Map(node, mapConfig);\n    }\n  }\n\n  renderChildren() {\n    const { children } = this.props;\n\n    if (!children) return;\n\n    return React.Children.map(children, (c) => {\n      if (!c) return;\n      return React.cloneElement(c, {\n        map: this.map,\n        google: this.props.google,\n        mapCenter: this.state.currentLocation,\n      });\n    });\n  }\n\n  render() {\n    const style = Object.assign({}, mapStyles.map);\n    return (\n      <div>\n        <div style={style} ref=\"map\">\n          Loading map...\n        </div>\n        {this.renderChildren()}\n      </div>\n    );\n  }\n}\n\nexport default Map;\n\nMap.defaultProps = {\n  zoom: 14,\n  initialCenter: {\n    lat: 40.7033,\n    lng: -73.9916,\n  },\n  centerAroundCurrentLocation: false,\n  visible: true,\n};\n"]},"metadata":{},"sourceType":"module"}
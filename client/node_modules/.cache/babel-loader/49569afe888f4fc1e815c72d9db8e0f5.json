{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"/Users/jervisbay/project-tres/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/jervisbay/project-tres/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"/Users/jervisbay/project-tres/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/Users/jervisbay/project-tres/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"/Users/jervisbay/project-tres/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar Command = require('./command.js');\n\nvar Packets = require('../packets/index.js');\n\nvar ClientHandshake = require('./client_handshake.js');\n\nvar CharsetToEncoding = require('../constants/charset_encodings.js');\n\nvar ChangeUser = /*#__PURE__*/function (_Command) {\n  _inherits(ChangeUser, _Command);\n\n  function ChangeUser(options, callback) {\n    var _this;\n\n    _classCallCheck(this, ChangeUser);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ChangeUser).call(this));\n    _this.onResult = callback;\n    _this.user = options.user;\n    _this.password = options.password;\n    _this.database = options.database;\n    _this.passwordSha1 = options.passwordSha1;\n    _this.charsetNumber = options.charsetNumber;\n    _this.currentConfig = options.currentConfig;\n    return _this;\n  }\n\n  _createClass(ChangeUser, [{\n    key: \"start\",\n    value: function start(packet, connection) {\n      var newPacket = new Packets.ChangeUser({\n        flags: connection.config.clientFlags,\n        user: this.user,\n        database: this.database,\n        charsetNumber: this.charsetNumber,\n        password: this.password,\n        passwordSha1: this.passwordSha1,\n        authPluginData1: connection._handshakePacket.authPluginData1,\n        authPluginData2: connection._handshakePacket.authPluginData2\n      });\n      this.currentConfig.user = this.user;\n      this.currentConfig.password = this.password;\n      this.currentConfig.database = this.database;\n      this.currentConfig.charsetNumber = this.charsetNumber;\n      connection.clientEncoding = CharsetToEncoding[this.charsetNumber]; // reset prepared statements cache as all statements become invalid after changeUser\n\n      connection._statements.reset();\n\n      connection.writePacket(newPacket.toPacket());\n      return ChangeUser.prototype.handshakeResult;\n    }\n  }]);\n\n  return ChangeUser;\n}(Command);\n\nChangeUser.prototype.handshakeResult = ClientHandshake.prototype.handshakeResult;\nChangeUser.prototype.calculateNativePasswordAuthToken = ClientHandshake.prototype.calculateNativePasswordAuthToken;\nmodule.exports = ChangeUser;","map":null,"metadata":{},"sourceType":"script"}
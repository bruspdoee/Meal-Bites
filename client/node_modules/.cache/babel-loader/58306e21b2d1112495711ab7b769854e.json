{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"/Users/jervisbay/project-tres/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/jervisbay/project-tres/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"/Users/jervisbay/project-tres/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/Users/jervisbay/project-tres/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"/Users/jervisbay/project-tres/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar EventEmitter = require('events').EventEmitter;\n\nvar Command = /*#__PURE__*/function (_EventEmitter) {\n  _inherits(Command, _EventEmitter);\n\n  function Command() {\n    var _this;\n\n    _classCallCheck(this, Command);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Command).call(this));\n    _this.next = null;\n    return _this;\n  } // slow. debug only\n\n\n  _createClass(Command, [{\n    key: \"stateName\",\n    value: function stateName() {\n      var state = this.next;\n\n      for (var i in this) {\n        if (this[i] === state && i !== 'next') {\n          return i;\n        }\n      }\n\n      return 'unknown name';\n    }\n  }, {\n    key: \"execute\",\n    value: function execute(packet, connection) {\n      if (!this.next) {\n        this.next = this.start;\n\n        connection._resetSequenceId();\n      }\n\n      if (packet && packet.isError()) {\n        var err = packet.asError(connection.clientEncoding);\n\n        if (this.onResult) {\n          this.onResult(err);\n          this.emit('end');\n        } else {\n          this.emit('error', err);\n          this.emit('end');\n        }\n\n        return true;\n      } // TODO: don't return anything from execute, it's ugly and error-prone. Listen for 'end' event in connection\n\n\n      this.next = this.next(packet, connection);\n\n      if (this.next) {\n        return false;\n      }\n\n      this.emit('end');\n      return true;\n    }\n  }]);\n\n  return Command;\n}(EventEmitter);\n\nmodule.exports = Command;","map":null,"metadata":{},"sourceType":"script"}
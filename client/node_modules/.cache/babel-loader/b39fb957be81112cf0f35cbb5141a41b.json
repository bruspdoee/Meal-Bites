{"ast":null,"code":"\"use strict\";\n\nmodule.exports = make;\nmodule.exports.ctor = ctor;\nmodule.exports.objCtor = objCtor;\nmodule.exports.obj = obj;\n\nvar through2 = require(\"through2\");\n\nvar xtend = require(\"xtend\");\n\nfunction ctor(options, fn) {\n  if (typeof options == \"function\") {\n    fn = options;\n    options = {};\n  }\n\n  var Filter = through2.ctor(options, function (chunk, encoding, callback) {\n    if (this.options.wantStrings) chunk = chunk.toString();\n\n    try {\n      if (fn.call(this, chunk, this._index++)) this.push(chunk);\n      return callback();\n    } catch (e) {\n      return callback(e);\n    }\n  });\n  Filter.prototype._index = 0;\n  return Filter;\n}\n\nfunction objCtor(options, fn) {\n  if (typeof options === \"function\") {\n    fn = options;\n    options = {};\n  }\n\n  options = xtend({\n    objectMode: true,\n    highWaterMark: 16\n  }, options);\n  return ctor(options, fn);\n}\n\nfunction make(options, fn) {\n  return ctor(options, fn)();\n}\n\nfunction obj(options, fn) {\n  if (typeof options === \"function\") {\n    fn = options;\n    options = {};\n  }\n\n  options = xtend({\n    objectMode: true,\n    highWaterMark: 16\n  }, options);\n  return make(options, fn);\n}","map":null,"metadata":{},"sourceType":"script"}
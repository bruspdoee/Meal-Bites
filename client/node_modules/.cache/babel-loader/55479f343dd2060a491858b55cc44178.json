{"ast":null,"code":"'use strict';\n\nvar through = require('through2');\n\nvar readDir = require('./read-dir');\n\nvar readStream = require('./read-stream');\n\nvar readBuffer = require('./read-buffer');\n\nvar readSymbolicLink = require('./read-symbolic-link');\n\nfunction readContents(optResolver) {\n  function readFile(file, enc, callback) {\n    // Skip reading contents if read option says so\n    var read = optResolver.resolve('read', file);\n\n    if (!read) {\n      return callback(null, file);\n    } // Don't fail to read a directory\n\n\n    if (file.isDirectory()) {\n      return readDir(file, optResolver, onRead);\n    } // Process symbolic links included with `resolveSymlinks` option\n\n\n    if (file.stat && file.stat.isSymbolicLink()) {\n      return readSymbolicLink(file, optResolver, onRead);\n    } // Read and pass full contents\n\n\n    var buffer = optResolver.resolve('buffer', file);\n\n    if (buffer) {\n      return readBuffer(file, optResolver, onRead);\n    } // Don't buffer anything - just pass streams\n\n\n    return readStream(file, optResolver, onRead); // This is invoked by the various readXxx modules when they've finished\n    // reading the contents.\n\n    function onRead(readErr) {\n      if (readErr) {\n        return callback(readErr);\n      }\n\n      return callback(null, file);\n    }\n  }\n\n  return through.obj(readFile);\n}\n\nmodule.exports = readContents;","map":null,"metadata":{},"sourceType":"script"}
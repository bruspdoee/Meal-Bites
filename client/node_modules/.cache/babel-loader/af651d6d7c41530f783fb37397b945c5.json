{"ast":null,"code":"'use strict';\n\nvar _possibleConstructorReturn = require(\"/Users/jervisbay/project-tres/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/Users/jervisbay/project-tres/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"/Users/jervisbay/project-tres/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _classCallCheck = require(\"/Users/jervisbay/project-tres/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/jervisbay/project-tres/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _require = require('./utils'),\n    classToInvokable = _require.classToInvokable;\n\nvar ABSTRACT = /*#__PURE__*/function () {\n  function ABSTRACT() {\n    _classCallCheck(this, ABSTRACT);\n  }\n\n  _createClass(ABSTRACT, [{\n    key: \"toString\",\n    value: function toString() {\n      return this.toSql.apply(this, arguments);\n    }\n  }, {\n    key: \"toSql\",\n    value: function toSql() {\n      throw new Error('toSql implementation missing');\n    }\n  }], [{\n    key: \"toString\",\n    value: function toString() {\n      var _this;\n\n      return (_this = new this()).toString.apply(_this, arguments);\n    }\n  }]);\n\n  return ABSTRACT;\n}();\n\nvar INITIALLY_DEFERRED = /*#__PURE__*/function (_ABSTRACT) {\n  _inherits(INITIALLY_DEFERRED, _ABSTRACT);\n\n  function INITIALLY_DEFERRED() {\n    _classCallCheck(this, INITIALLY_DEFERRED);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(INITIALLY_DEFERRED).apply(this, arguments));\n  }\n\n  _createClass(INITIALLY_DEFERRED, [{\n    key: \"toSql\",\n    value: function toSql() {\n      return 'DEFERRABLE INITIALLY DEFERRED';\n    }\n  }]);\n\n  return INITIALLY_DEFERRED;\n}(ABSTRACT);\n\nvar INITIALLY_IMMEDIATE = /*#__PURE__*/function (_ABSTRACT2) {\n  _inherits(INITIALLY_IMMEDIATE, _ABSTRACT2);\n\n  function INITIALLY_IMMEDIATE() {\n    _classCallCheck(this, INITIALLY_IMMEDIATE);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(INITIALLY_IMMEDIATE).apply(this, arguments));\n  }\n\n  _createClass(INITIALLY_IMMEDIATE, [{\n    key: \"toSql\",\n    value: function toSql() {\n      return 'DEFERRABLE INITIALLY IMMEDIATE';\n    }\n  }]);\n\n  return INITIALLY_IMMEDIATE;\n}(ABSTRACT);\n\nvar NOT = /*#__PURE__*/function (_ABSTRACT3) {\n  _inherits(NOT, _ABSTRACT3);\n\n  function NOT() {\n    _classCallCheck(this, NOT);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(NOT).apply(this, arguments));\n  }\n\n  _createClass(NOT, [{\n    key: \"toSql\",\n    value: function toSql() {\n      return 'NOT DEFERRABLE';\n    }\n  }]);\n\n  return NOT;\n}(ABSTRACT);\n\nvar SET_DEFERRED = /*#__PURE__*/function (_ABSTRACT4) {\n  _inherits(SET_DEFERRED, _ABSTRACT4);\n\n  function SET_DEFERRED(constraints) {\n    var _this2;\n\n    _classCallCheck(this, SET_DEFERRED);\n\n    _this2 = _possibleConstructorReturn(this, _getPrototypeOf(SET_DEFERRED).call(this));\n    _this2.constraints = constraints;\n    return _this2;\n  }\n\n  _createClass(SET_DEFERRED, [{\n    key: \"toSql\",\n    value: function toSql(queryGenerator) {\n      return queryGenerator.setDeferredQuery(this.constraints);\n    }\n  }]);\n\n  return SET_DEFERRED;\n}(ABSTRACT);\n\nvar SET_IMMEDIATE = /*#__PURE__*/function (_ABSTRACT5) {\n  _inherits(SET_IMMEDIATE, _ABSTRACT5);\n\n  function SET_IMMEDIATE(constraints) {\n    var _this3;\n\n    _classCallCheck(this, SET_IMMEDIATE);\n\n    _this3 = _possibleConstructorReturn(this, _getPrototypeOf(SET_IMMEDIATE).call(this));\n    _this3.constraints = constraints;\n    return _this3;\n  }\n\n  _createClass(SET_IMMEDIATE, [{\n    key: \"toSql\",\n    value: function toSql(queryGenerator) {\n      return queryGenerator.setImmediateQuery(this.constraints);\n    }\n  }]);\n\n  return SET_IMMEDIATE;\n}(ABSTRACT);\n/**\n * A collection of properties related to deferrable constraints. It can be used to\n * make foreign key constraints deferrable and to set the constraints within a\n * transaction. This is only supported in PostgreSQL.\n *\n * The foreign keys can be configured like this. It will create a foreign key\n * that will check the constraints immediately when the data was inserted.\n *\n * ```js\n * sequelize.define('Model', {\n *   foreign_id: {\n *     type: Sequelize.INTEGER,\n *     references: {\n *       model: OtherModel,\n *       key: 'id',\n *       deferrable: Sequelize.Deferrable.INITIALLY_IMMEDIATE\n *     }\n *   }\n * });\n * ```\n *\n * The constraints can be configured in a transaction like this. It will\n * trigger a query once the transaction has been started and set the constraints\n * to be checked at the very end of the transaction.\n *\n * ```js\n * sequelize.transaction({\n *   deferrable: Sequelize.Deferrable.SET_DEFERRED\n * });\n * ```\n *\n * @property INITIALLY_DEFERRED Defer constraints checks to the end of transactions.\n * @property INITIALLY_IMMEDIATE Trigger the constraint checks immediately\n * @property NOT Set the constraints to not deferred. This is the default in PostgreSQL and it make it impossible to dynamically defer the constraints within a transaction.\n * @property SET_DEFERRED\n * @property SET_IMMEDIATE\n */\n\n\nvar Deferrable = module.exports = {\n  // eslint-disable-line\n  INITIALLY_DEFERRED: classToInvokable(INITIALLY_DEFERRED),\n  INITIALLY_IMMEDIATE: classToInvokable(INITIALLY_IMMEDIATE),\n  NOT: classToInvokable(NOT),\n  SET_DEFERRED: classToInvokable(SET_DEFERRED),\n  SET_IMMEDIATE: classToInvokable(SET_IMMEDIATE)\n};","map":null,"metadata":{},"sourceType":"script"}